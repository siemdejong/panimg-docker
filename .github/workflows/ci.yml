name: CI

on:
  push:
    paths:
      - 'Dockerfile'
  pull_request:
    paths:
      - 'Dockerfile'
  schedule:
    - cron: '0 0 1 * *' # Runs monthly on the 1st at midnight UTC
  workflow_dispatch:

env:
  MINIMUM_PYTHON_VERSION: '3.13'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check-version:
    name: Check latest panimg version
    runs-on: ubuntu-latest
    outputs:
       CURRENT_VERSION: ${{ steps.current-version.outputs.CURRENT_VERSION }}
    steps:
      - name: Install Python ${{ env.MINIMUM_PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - uses: actions/checkout@v3
        with:
          repository: 'diagnijmegen/rse-panimg'
      - name: Get current package version
        id: current-version
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          CURRENT_VERSION=$(poetry version | awk '{print $2}')
          echo "CURRENT_VERSION=$CURRENT_VERSION"
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> "$GITHUB_OUTPUT"
  docker:
    needs: check-version
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      CURRENT_VERSION: ${{ needs.check-version.outputs.CURRENT_VERSION }}
    name: Build and push Docker image
    steps:
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          build-args: panimg_version=${{ env.CURRENT_VERSION }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:${{ env.CURRENT_VERSION }}